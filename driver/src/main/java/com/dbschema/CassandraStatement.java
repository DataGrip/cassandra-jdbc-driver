package com.dbschema;

import com.datastax.driver.core.Session;
import com.datastax.driver.core.exceptions.SyntaxError;
import com.dbschema.resultSet.CassandraResultSet;

import java.sql.*;

public class CassandraStatement extends CassandraBaseStatement {

    private final Session session;

    CassandraStatement(Session session) {
        this.session = session;
    }

    @Override
    public ResultSet executeQuery(String sql) throws SQLException {
        checkClosed();
        try {
            result = new CassandraResultSet(this, session.execute(sql));
            return result;
        } catch (SyntaxError ex) {
            throw new SQLSyntaxErrorException(ex);
        }
    }

    @Override
    public int executeUpdate(String sql) throws SQLException {
        checkClosed();
        try {
            result = new CassandraResultSet(this, session.execute(sql));
            if (result.isQuery()) {
                throw new SQLException("Not an update statement");
            }
            return 1;
        } catch (SyntaxError ex) {
            throw new SQLSyntaxErrorException(ex);
        }
    }

    @Override
    public boolean execute(String sql) throws SQLException {
        checkClosed();
        return executeInner(session.execute(sql));
    }

    @Override
    public ResultSet getResultSet() throws SQLException {
        checkClosed();
        return result;
    }

    @Override
    public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
        throw new SQLFeatureNotSupportedException();
    }

    @Override
    public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
        throw new SQLFeatureNotSupportedException();
    }

    @Override
    public int executeUpdate(String sql, String[] columnNames) throws SQLException {
        throw new SQLFeatureNotSupportedException();
    }

    @Override
    public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
        throw new SQLFeatureNotSupportedException();
    }

    @Override
    public boolean execute(String sql, int[] columnIndexes) throws SQLException {
        throw new SQLFeatureNotSupportedException();
    }

    @Override
    public boolean execute(String sql, String[] columnNames) throws SQLException {
        throw new SQLFeatureNotSupportedException();
    }
}
